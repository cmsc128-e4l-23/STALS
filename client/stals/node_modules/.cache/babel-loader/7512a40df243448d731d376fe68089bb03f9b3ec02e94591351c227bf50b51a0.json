{"ast":null,"code":"var _jsxFileName = \"/Users/farrelbeso/Desktop/School/CMSC 128/anothercopy/STALS/client/stals/src/pages/Home/Body.js\",\n  _s = $RefreshSig$();\nimport { React, useState, useEffect, useCallback } from \"react\";\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Box from '@mui/material/Box';\nimport AccommList from \"./AccommList\";\nimport \"./Body.css\";\nimport Loading from \"components/Loading\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Body(_ref) {\n  _s();\n  let {\n    isLoggedIn,\n    email,\n    data\n  } = _ref;\n  const [loading, setLoading] = useState(true);\n  const [accommList, updateAccommList] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:3001/searchAccomm', {\n      method: 'POST',\n      credentials: 'include',\n      body: JSON.stringify({\n        searchString: data\n      }),\n      headers: {\n        'Content-Type': \"application/json\"\n      }\n    }).then(res => res.json()).then(data => {\n      if (data.success) {\n        updateAccommList(data.result);\n      } else throw Error;\n    });\n    setLoading(false);\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"body-div\",\n    children: loading ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: accommList.length === 0 ? /*#__PURE__*/_jsxDEV(\"h3\", {\n        id: \"not-found\",\n        children: \"Accommodations not found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"body-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Accommodations: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(AccommList, {\n          isLoggedIn: isLoggedIn,\n          email: email,\n          accommList: accommList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this)\n    }, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n\n  // // loading\n  // if (fetchedAccomm == null) {\n  //     return (\n  //         <div className=\"body-div\">\n  //             <Box alignItems={\"center\"}>\n  //                 <CircularProgress />\n  //             </Box>\n  //         </div>\n  //     );\n  // }\n  // // not searching anything\n  // // Homepage\n  // if (data === \"\") {\n  //     return (\n  //         // the whole body\n  //         <div className=\"body-div\">\n  //             <div className=\"body-container\">\n  //                 <h1>Within UPLB Vicinity</h1>\n  //                 <div id=\"inside\" className=\"body-group\">\n  //                     {accommList.map((accomm) => {\n  //                         if (accomm.generalLocation <= 1000) {\n  //                             return < AccommCard data={passData} accomm={accomm} />\n  //                         }\n  //                     })}\n  //                 </div>\n  //                 <h1>Outside UPLB Vicinity</h1>\n  //                 <div id=\"inside\" className=\"body-group\">\n  //                     {accommList.map((accomm) => {\n  //                         if (accomm.generalLocation > 1000) {\n  //                             return < AccommCard data={passData} accomm={accomm}  />\n  //                         }\n  //                     })}\n  //                 </div>\n  //             </div>\n  //         </div>\n  //     );\n  // }\n  // // return search results\n  // else {\n  //     // display results accordingly\n  //     // AccommCard not found\n  //     if (fetchedAccomm == false) {\n  //         return (\n  //             <div className=\"body-div\">\n  //                 <h3 id=\"not-found\">AccommCard not found</h3>\n  //             </div>\n  //         );\n  //     }\n  //     else {\n  //         // AccommCard found\n  //         return (\n  //             // the whole body\n  //             <div className=\"body-div\">\n  //                 <div className=\"body-container\">\n  //                     <div className=\"body-group\">\n  //                         {accommList.map((accomm) => {\n  //                             return < AccommCard data={passData} accomm={accomm} />\n  //                         })}\n  //                     </div>\n  //                 </div>\n  //             </div>\n  //         );\n  //     }\n  // }\n}\n_s(Body, \"bZdAO/14D6fCGT0srV9lNqfxuSc=\");\n_c = Body;\nvar _c;\n$RefreshReg$(_c, \"Body\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","CircularProgress","Box","AccommList","Loading","jsxDEV","_jsxDEV","Fragment","_Fragment","Body","_ref","_s","isLoggedIn","email","data","loading","setLoading","accommList","updateAccommList","fetch","method","credentials","body","JSON","stringify","searchString","headers","then","res","json","success","result","Error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","id","_c","$RefreshReg$"],"sources":["/Users/farrelbeso/Desktop/School/CMSC 128/anothercopy/STALS/client/stals/src/pages/Home/Body.js"],"sourcesContent":["import { React, useState, useEffect, useCallback } from \"react\";\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Box from '@mui/material/Box';\nimport AccommList from \"./AccommList\";\nimport \"./Body.css\";\nimport Loading from \"components/Loading\";\n\n\nexport default function Body({ isLoggedIn, email, data }) {\n    const [loading, setLoading] = useState(true);\n    const [accommList, updateAccommList] = useState([]);\n\n    useEffect(() => {\n        fetch('http://localhost:3001/searchAccomm', {\n            method: 'POST',\n            credentials: 'include',\n            body: JSON.stringify({ searchString: data }),\n            headers: {\n                'Content-Type': \"application/json\"\n            }\n        })\n            .then(res => res.json())\n            .then(data => {\n                if (data.success) {\n                    updateAccommList(data.result);\n                }else throw Error\n            })\n        setLoading(false)\n    }, [data])\n\n    return(\n        <div className=\"body-div\">\n            {\n                loading ? \n                <Loading />\n                :\n                <>\n                {\n                    accommList.length === 0 ?\n                    <h3 id=\"not-found\">Accommodations not found</h3>\n                    :\n                    <div className=\"body-container\">\n                        <h1>Accommodations: </h1>\n                        <AccommList \n                            isLoggedIn={isLoggedIn}\n                            email={email}\n                            accommList={accommList} \n                        />\n                    </div>\n                }\n                </>\n                \n                    \n            }\n        </div>\n    )\n\n    // // loading\n    // if (fetchedAccomm == null) {\n    //     return (\n    //         <div className=\"body-div\">\n    //             <Box alignItems={\"center\"}>\n    //                 <CircularProgress />\n    //             </Box>\n    //         </div>\n    //     );\n    // }\n    // // not searching anything\n    // // Homepage\n    // if (data === \"\") {\n    //     return (\n    //         // the whole body\n    //         <div className=\"body-div\">\n    //             <div className=\"body-container\">\n    //                 <h1>Within UPLB Vicinity</h1>\n    //                 <div id=\"inside\" className=\"body-group\">\n    //                     {accommList.map((accomm) => {\n    //                         if (accomm.generalLocation <= 1000) {\n    //                             return < AccommCard data={passData} accomm={accomm} />\n    //                         }\n    //                     })}\n    //                 </div>\n    //                 <h1>Outside UPLB Vicinity</h1>\n    //                 <div id=\"inside\" className=\"body-group\">\n    //                     {accommList.map((accomm) => {\n    //                         if (accomm.generalLocation > 1000) {\n    //                             return < AccommCard data={passData} accomm={accomm}  />\n    //                         }\n    //                     })}\n    //                 </div>\n    //             </div>\n    //         </div>\n    //     );\n    // }\n    // // return search results\n    // else {\n    //     // display results accordingly\n    //     // AccommCard not found\n    //     if (fetchedAccomm == false) {\n    //         return (\n    //             <div className=\"body-div\">\n    //                 <h3 id=\"not-found\">AccommCard not found</h3>\n    //             </div>\n    //         );\n    //     }\n    //     else {\n    //         // AccommCard found\n    //         return (\n    //             // the whole body\n    //             <div className=\"body-div\">\n    //                 <div className=\"body-container\">\n    //                     <div className=\"body-group\">\n    //                         {accommList.map((accomm) => {\n    //                             return < AccommCard data={passData} accomm={accomm} />\n    //                         })}\n    //                     </div>\n    //                 </div>\n    //             </div>\n    //         );\n    //     }\n    // }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}